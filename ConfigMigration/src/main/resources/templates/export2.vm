<html>
	<head>
		<title>Export</title>
		<meta content="admin" name="decorator" />
		<script type="text/javascript">
		
			// Selected export/import objects for current selections.
			// Actual state is stored in property of JiraConfigDTO items in DTOStore
			// Key is from getSelectionKey()
			// Value is from getSelectionItem()
			var selectedObjects = {};
		
			function submitForm(action) {
				// Submit
				document.getElementById('action').value = action;
				window.onbeforeunload = null;
				document.forms['mainForm'].submit();
			}
			
			// Get Key to use in selectedObjects map variable
			function getSelectionKey(exportStore, util, uniqueKey) {
				return ((exportStore)? 'export' : 'import') + '|' + util + '|' + uniqueKey;
			}
			
			// Get SelectionData to submit to server
			function getSelectionItem(exportStore, util, uniqueKey, selected) {
				var item = {
					exportStore: exportStore,
					utilName: util,
					uniqueKey: uniqueKey,
					selected: selected
				};
				return item;
			}
			
			// View item
			function view(exportStore, util, uniqueKey) {
				var value = getSelectionItem(exportStore, util, uniqueKey, false);
				$('input#viewObject').val(JSON.stringify(value));
				submitForm('view');
			}
			
			// Jump to item in detail view
			function viewJump(exportStore, util, uniqueKey) {
				var value = getSelectionItem(exportStore, util, uniqueKey, false);
				$('input#viewObject').val(JSON.stringify(value));
				submitForm('viewJump');
			}
			
			// Add item to detail view
			function viewAdd(exportStore, util, uniqueKey) {
				var value = getSelectionItem(exportStore, util, uniqueKey, false);
				$('input#viewObject').val(JSON.stringify(value));
				submitForm('viewAdd');
			}
			
			// Enable/disable "Update Selection" button 
			function disableUpdateSelectionButton(disable) {
				$('input#updateSelectionButton').attr('disabled', disable);
			}
			
			// Update selection.
			// exportStore - true for export, false for import
			// checkboxControl - Checkbox changed. Pass null to use the following parameters.
			// checkboxClass - List of checkbox with this class to toggle. If null, all classes will be toggled.
			// allCheckboxClass - The "select all" checkbox with this class to uncheck. If null, all will be toggled.
			function updateSelection(exportStore, checkboxControl, checkboxClass, allCheckboxClass) {
				console.log('updateSelection() invoked');
				if (checkboxControl) {
					// Select single checkbox
					var util = $(checkboxControl).attr('util');
					var uniqueKey = $(checkboxControl).attr('uniqueKey');
					var selected = ($(checkboxControl).attr('checked') == 'checked');
					var key = getSelectionKey(exportStore, util, uniqueKey);
					var value = getSelectionItem(exportStore, util, uniqueKey, selected);
					selectedObjects[key] = value;
				} else {
					// Select all checkboxes of specified class
					if (checkboxClass != null) {
						$('input[type="checkbox"].' + checkboxClass).each(function() {
							var util = $(this).attr('util');
							var uniqueKey = $(this).attr('uniqueKey');
							var selected = ($(this).attr('checked') == 'checked');
							var key = getSelectionKey(exportStore, util, uniqueKey);
							var value = getSelectionItem(exportStore, util, uniqueKey, selected);
							selectedObjects[key] = value;
						});
					} else {
						// Select all checkboxes
						$('input[type="checkbox"][util][uniqueKey]').each(function() {
							var util = $(this).attr('util');
							var uniqueKey = $(this).attr('uniqueKey');
							var selected = ($(this).attr('checked') == 'checked');
							var key = getSelectionKey(exportStore, util, uniqueKey);
							var value = getSelectionItem(exportStore, util, uniqueKey, selected);
							selectedObjects[key] = value;
						});
					}
				}
				// Update selection hidden field
				var out = [];
				var selectedCount = 0;
				var valueList = Object.values(selectedObjects);
				for (var i in valueList) {
					out.push(valueList[i]);
					if (valueList[i].selected) {
						selectedCount++;
					}
				}
				console.log('selectedObjects size: ' + selectedCount + '/' + valueList.length);
				// Turn off select all util class checkbox
				if (allCheckboxClass) {
					// For specific util class only
					$('input.' + allCheckboxClass).attr('checked', false);
				} 
				// Update hidden field
				$('input#selectedObjects').val(JSON.stringify(out));
				// Enable button
				disableUpdateSelectionButton(false);
			}

			function selectAll(exportStore, selectClass, value) {
				if (selectClass != null) {
					// Specific util class only
					$('input[type="checkbox"].' + selectClass).attr('checked', value);
					console.log('selectAll: ' + 
							$('input[type="checkbox"].' + selectClass).length + ', ' + value);
				} else {
					var typeClass = (exportStore)? "export" : "import";
					// All util class
					$('input[type="checkbox"][util][uniqueKey].' + typeClass).attr('checked', value);
					console.log('selectAll: ' + 
							$('input[type="checkbox"][util][uniqueKey].' + typeClass).length + ', ' + value);
				}
				console.log('selectAll() invoking updateSelection()');
				updateSelection(exportStore, null, selectClass, null);
			}
			
			function exportData() {
				// Show dialog to get description
				AJS.dialog2('#export-dialog').show();
			}
			
			function importData() {
				AJS.dialog2('#import-dialog').show();
			}
			
			function mergeData() {
				AJS.dialog2('#merge-dialog').show();
			}
			
			// Dialog event handlers
			AJS.$(document).on('click', '#export-dialogOK', function (e) {
			    e.preventDefault();
			    var desc = $('input#descriptionInput').val();
			    AJS.dialog2("#export-dialog").hide();
			    $('input#exportDesc').val(desc);
			    submitForm('export');
			});
			AJS.$(document).on('click', '#export-dialogCancel', function (e) {
			    e.preventDefault();
			    AJS.dialog2("#export-dialog").hide();
			});
			AJS.$(document).on('click', '#import-dialogOK', function (e) {
			    e.preventDefault();
			    importForm.submit();
			});
			AJS.$(document).on('click', '#import-dialogCancel', function (e) {
			    e.preventDefault();
			    AJS.dialog2('#import-dialog').hide();
			});
			AJS.$(document).on('click', '#merge-dialogOK', function (e) {
			    e.preventDefault();
			    var desc = $('input#mergeDescInput').val();
			    AJS.dialog2("#merge-dialog").hide();
			    $('input#mergeDesc').val(desc);
			    submitForm('merge');
			});
			AJS.$(document).on('click', '#merge-dialogCancel', function (e) {
			    e.preventDefault();
			    AJS.dialog2("#merge-dialog").hide();
			});
		</script>
	</head>
	<body>
		<form id="downloadForm" action="" method="GET">
		</form>
	
		<!-- Merge dialog -->
		<section 	id="merge-dialog" 
					class="aui-dialog2 aui-dialog2-medium aui-layer" 
					aria-hidden="true"
					role="dialog">
		    <!-- Dialog header -->
		    <header class="aui-dialog2-header">
		        <!-- The dialog's title -->
		        <h2 class="aui-dialog2-header-main">Please enter a description for the merge</h2>
		        <!-- Close icon -->
		        <!-- 
		        <a class="aui-dialog2-header-close">
		            <span class="aui-icon aui-icon-small aui-iconfont-close-dialog">Close</span>
		        </a>
		        -->
		    </header>
		    <!-- Main dialog content -->
		    <div class="aui-dialog2-content">
				<span>Description: </span>
				<input type="text" id="mergeDescInput" name="mergeDesc" value=""
						onkeydown="if (event.key == 'Enter') { $('#merge-dialogOK').click(); }"/>
		    </div>
		    <!-- Dialog footer -->
		    <footer class="aui-dialog2-footer">
		        <!-- Actions to render on the right of the footer -->
		        <div class="aui-dialog2-footer-actions">
		            <button id="merge-dialogOK" class="aui-button aui-button-primary">OK</button>
		            <button id="merge-dialogCancel" class="aui-button aui-button-link">Cancel</button>
		        </div>
		        <!-- Hint text is rendered on the left of the footer -->
		        <div class="aui-dialog2-footer-hint"></div>
		    </footer>
		</section>
		
		<!-- Import dialog -->
		<section 	id="import-dialog" 
					class="aui-dialog2 aui-dialog2-medium aui-layer" 
					aria-hidden="true"
					role="dialog">
		    <!-- Dialog header -->
		    <header class="aui-dialog2-header">
		        <!-- The dialog's title -->
		        <h2 class="aui-dialog2-header-main">Please select file to import</h2>
		        <!-- Close icon -->
		        <!-- 
		        <a class="aui-dialog2-header-close">
		            <span class="aui-icon aui-icon-small aui-iconfont-close-dialog">Close</span>
		        </a>
		        -->
		    </header>
		    <!-- Main dialog content -->
		    <!-- action="/jira/plugins/servlet/configmigrationupload" -->
		    <!-- action="ExportAction2.jspa" -->
		    <div class="aui-dialog2-content">
				<form 	id="importForm" 
						method="post" 
						action="${action.getUploadServlet()}"
						encType="multipart/form-data">
					<span>Select File: </span>
					<input 	type="file" 
							id="importFile" 
							name="importFile" 
							accept=".json"
							value=""/>
				</form>
		    </div>
		    <!-- Dialog footer -->
		    <footer class="aui-dialog2-footer">
		        <!-- Actions to render on the right of the footer -->
		        <div class="aui-dialog2-footer-actions">
		            <button id="import-dialogOK" class="aui-button aui-button-primary">OK</button>
		            <button id="import-dialogCancel" class="aui-button aui-button-link">Cancel</button>
		        </div>
		        <!-- Hint text is rendered on the left of the footer -->
		        <div class="aui-dialog2-footer-hint"></div>
		    </footer>
		</section>
	
		<!-- Export dialog -->
		<section 	id="export-dialog" 
					class="aui-dialog2 aui-dialog2-medium aui-layer" 
					aria-hidden="true"
					role="dialog">
		    <!-- Dialog header -->
		    <header class="aui-dialog2-header">
		        <!-- The dialog's title -->
		        <h2 class="aui-dialog2-header-main">Please enter a description for the export</h2>
		        <!-- Close icon -->
		        <!-- 
		        <a class="aui-dialog2-header-close">
		            <span class="aui-icon aui-icon-small aui-iconfont-close-dialog">Close</span>
		        </a>
		        -->
		    </header>
		    <!-- Main dialog content -->
		    <div class="aui-dialog2-content">
				<span>Description: </span>
				<input type="text" id="descriptionInput" name="descriptionInput" value=""
						onkeydown="if (event.key == 'Enter') { $('#export-dialogOK').click(); }"/>
		    </div>
		    <!-- Dialog footer -->
		    <footer class="aui-dialog2-footer">
		        <!-- Actions to render on the right of the footer -->
		        <div class="aui-dialog2-footer-actions">
		            <button id="export-dialogOK" class="aui-button aui-button-primary">OK</button>
		            <button id="export-dialogCancel" class="aui-button aui-button-link">Cancel</button>
		        </div>
		        <!-- Hint text is rendered on the left of the footer -->
		        <div class="aui-dialog2-footer-hint"></div>
		    </footer>
		</section>

		<div class="ConfigMigration">
			<form action="ExportAction2.jspa" method="post" id="mainForm" onkeydown="return event.key != 'Enter';">
				<input type="hidden" id="action" name="action" value=""/>
				<input 	type="hidden" 
						id="selectedObjects" name="selectedObjects" 
						value="[]"/>
				<input 	type="hidden" 
						id="viewObject" name="viewObject" 
						value=""/>
				<input  type="hidden"
						id="exportDesc" name="exportDesc"
						value=""/>
				<input 	type="hidden"
						id="mergeDesc" name="mergeDesc"
						value=""/>
				<div style="display: flex; flex-flow: column nowrap; max-height: 100%">
					<!-- Toolbar -->
					<div style="flex: 1 1 auto">
						<div>
							<span style="font-weight: bold">Filter by Object Type: </span>
							<select id="objectType" name="objectType"
									value="$!{action.getObjectType()}" 
									style="width: 150px"
									onchange="submitForm('objectType')">
								#if ($action.getObjectType().length() == 0) 
									<option selected value="">All</option>
								#else
									<option value="">All</option>
								#end
								#foreach ($item in $action.getObjectTypes($action.getShowAllUtils()).entrySet())
									#if ($item.getValue() == $action.getObjectType())
										<option selected value="$!{item.getValue()}">${item.getKey()}</option>
									#else
										<option value="$!{item.getValue()}">${item.getKey()}</option>
									#end
								#end
							</select>
							<span style="font-weight: bold">Select Dependencies</span>
							<select id="selectNested" name="selectNested" 
									onchange="disableUpdateSelectionButton(false)"
									style="width: 60px">
								#if ($action.getSelectNested() == $true)
									<option value="true" selected>Auto</option>
									<option value="false">Manual</option>
								#else
									<option value="true">Auto</option>
									<option value="false" selected>Manual</option>
								#end
							</select>
							<span style="font-weight: bold">Show All Object Types: </span>
							<select id="showAllUtils" name="showAllUtils"
									onchange="submitForm('')"
									style="width: 50px">
								#if ($action.getShowAllUtils())
									<option value="true" selected>Yes</option>
									<option value="false">No</option>
								#else
									<option value="true">Yes</option>
									<option value="false" selected>No</option>
								#end
							</select>
							<input 	type="button" 
									id="updateSelectionButton" 
									value="Update Selection" 
									onclick="submitForm('')" disabled/>
							<input 	type="button" 
									id="viewClear" 
									onclick="submitForm('viewClear')" 
									value="Close Details"/>
						</div>
					</div>
					<!-- 2 columns for export and import objects -->
					<div style="flex: 1 1 auto; overflow-y: scroll">
						<table class="ConfigMigration" style="flex: 1 1 auto; width: 100%; table-layout: fixed;">
							<tr>
								<td width="50%">
									<div>
										<input 	type="button" 
												id="reload" 
												value="Refresh" 
												onclick="submitForm('reload')"/>
										<span style="font-weight: bold">Filter by Name: </span>
										<input 	type="text" 
												id="exportFilter" 
												name="exportFilter"
												value="$!{action.getExportFilter()}" 
												style="width: 35%" 
												onchange="submitForm('exportFilter')"
												onkeydown="if (event.key == 'Enter') { submitForm('exportFilter'); }"/>
										<input 	type="button" 
												id="export" 
												value="Export" 
												onclick="exportData()"/>
									</div>
									<div>
										#if ($action.getObjectType() != "") 
											<span style="font-weight: bold">
												Selected $!{action.getObjectTypeName()}: 
												$!{action.getExportStore().getSelectedCount($action.getObjectType(), $action.getShowAllUtils())} 
												/ 
												$!{action.getExportStore().getTotalCount($action.getObjectType(), $action.getShowAllUtils())}
											</span>
										#end
										<span style="font-weight: bold">
											Selected Objects: 
											$!{action.getExportStore().getSelectedCount($null, $action.getShowAllUtils())} 
											/ 
											$!{action.getExportStore().getTotalCount($null, $action.getShowAllUtils())}
										</span>
									</div>								
								</td>
								<td width="50%">
									<div>
										<input 	type="button" 
												id="import" 
												value="Import" 
												onclick="importData()"/>
										<span style="font-weight: bold">Filter by Name: </span>
										<input 	type="text" 
												id="importFilter" 
												name="importFilter"
												value="$!{action.getImportFilter()}" 
												style="width: 35%" 
												onchange="submitForm('importFilter')"
												onkeydown="if (event.key == 'Enter') { submitForm('importFilter'); }"/>
										<input 	type="button" 
												id="merge" 
												value="Merge" 
												onclick="mergeData()"/>
									</div>
									<div>
										#if ($action.getObjectType() != "") 
											<span style="font-weight: bold">
												Selected $!{action.getObjectTypeName()}: 
												$!{action.getImportStore().getSelectedCount($action.getObjectType(), $action.getShowAllUtils())} 
												/ 
												$!{action.getImportStore().getTotalCount($action.getObjectType(), $action.getShowAllUtils())}
											</span>
										#end
										<span style="font-weight: bold">
											Selected Objects: 
											$!{action.getImportStore().getSelectedCount($null, $action.getShowAllUtils())} 
											/ 
											$!{action.getImportStore().getTotalCount($null, $action.getShowAllUtils())}
										</span>
									</div>
								</td>
							</tr>
							<tr>
								<th>
									<input 	type="checkbox" 
											onclick="selectAll(true, null, this.checked)"
									/>
									Current Objects
								</th>
								<th>
									<input 	type="checkbox" 
											onclick="selectAll(false, null, this.checked)"
									/>
									Imported Objects
								</th>
							</tr>
						</table>
					</div>
					#if ($action.getViewExport() || $action.getViewImport())
						#set ($listSize = "15vh")
					#else
						#set ($listSize = "40vh")
					#end
					<div style="flex: 1 1 auto; max-height: ${listSize}; overflow-y: scroll">
						<table class="ConfigMigration" style="flex: 1 1 auto; width: 100%; table-layout: fixed;">
							#foreach ($keyGuide in $action.getCompareKeyGuide().entrySet())
								#set ($util = $keyGuide.getKey())
								#set ($showUtil = $true)
								#if ($action.getObjectType().length() != 0)
									#if (!$util.getImplementation().equals($action.getObjectType()))
										#set ($showUtil = $false)
									#end
								#end
								#if (!$action.getShowAllUtils() && !$util.isVisible())
									#set ($showUtil = $false)
								#end
								#if ($showUtil)
									#set ($exportClass = "export-" + $util.getImplementationCSS())
									#set ($exportAllClass = $exportClass + "-All")
									#set ($importClass = "import-" + $util.getImplementationCSS())
									#set ($importAllClass = $importClass + "-All")
									<!-- Util name -->
									<tr>
										<th width="3%">
											<input 	type="checkbox"
													class="$!{exportAllClass} selectAll"
													onchange="selectAll(true, '$!{exportClass}', this.checked)"
											/>
										</th>
										<th width="47%">
											${util.getName()}
										</th>
										<th width="3%">
											<input 	type="checkbox"
													class="$!{importAllClass} selectAll"
													onchange="selectAll(false, '$!{importClass}', this.checked)"
											/>
										</th>
										<th width="47%">
											${util.getName()}
										</th>
									</tr>
									<!-- Matching pairs of data -->
									#foreach ($key in $keyGuide.getValue())
										#set ($exportStore = $action.getExportStore().getTypeStore($util))
										#set ($exportObj = $false)
										#set ($importStore = $action.getImportStore().getTypeStore($util))
										#set ($importObj = $false)
										#if ($exportStore.containsKey($key))
											#set ($exportObj = $exportStore.get($key))
											#if (!$util.matchFilter($exportObj, $action.getExportFilter()))
												#set ($exportObj = $false)
											#end
										#end
										#if ($importStore.containsKey($key))
											#set ($importObj = $importStore.get($key))
											#if (!$util.matchFilter($importObj, $action.getImportFilter()))
												#set ($importObj = $false)
											#end
										#end
										#if ($exportObj || $importObj)
											<tr>
												#if ($exportObj)
													#if ($exportObj.isSelected())
														#set ($checked = "checked")
													#else
														#set ($checked = "")
													#end
													#if ($exportObj.getUniqueKey() == $action.getViewExportUniqueKey()) 
														#set ($scrollIntoView = "scrollIntoView")
													#else
														#set ($scrollIntoView = "")
													#end
													<td>
														<input 	type="checkbox" 
																class="$!{exportClass} export"
																$!{checked}
																util="$!{util.getImplementation()}"
																uniqueKey="$!{exportObj.getUniqueKey()}"
																onchange="updateSelection(true, this, null, '${exportAllClass}')"/>
													</td>
													<td>
														<a 	href="#" 
															$!{scrollIntoView}
															onclick="view(
																true,
																'$!{util.getImplementation()}', 
																'$!{exportObj.getUniqueKeyJS()}')">
															#if ($exportObj.getConfigName())
																$!{exportObj.getConfigName()}
															#else
																(Default)
															#end
														</a>
													</td>
												#else
													#if ($importObj) 
														<td/><td/>
													#end
												#end
												#if ($importObj)
													#if ($importObj.isSelected())
														#set ($checked = "checked")
													#else
														#set ($checked = "")
													#end
													#if ($importObj.getUniqueKey() == $action.getViewImportUniqueKey()) 
														#set ($scrollIntoView = "scrollIntoView")
													#else
														#set ($scrollIntoView = "")
													#end
													<td>
														<input 	type="checkbox" 
																class="$!{importClass} import"
																$!{checked}
																util="$!{util.getImplementation()}"
																uniqueKey="$!{importObj.getUniqueKey()}"
																onchange="updateSelection(false, this, null, '${importAllClass}')"/>
													</td>
													<td>
														<a 	href="#" 
															$!{scrollIntoView}
															onclick="view(
																false,
																'$!{util.getImplementation()}', 
																'$!{importObj.getUniqueKeyJS()}')">
															#if ($importObj.getConfigName())
																$!{importObj.getConfigName()}
															#else
																(Default)
															#end
														</a>
													</td>
												#else
													#if ($exportObj)
														<td/><td/>
													#end
												#end
											</tr>
										#end
									#end
								#end
							#end
						</table>
					</div>
					<!-- Details -->
					<div>
						<table style="width: 100%; table-layout: fixed;">
							<tr>
								<!-- Export details -->
								<td style="min-width: 50%; max-width: 50%">
									#set ($exportMode = $true)
									#parse("/templates/export2_viewObject.vm")
								</td>
								<!-- Import details -->
								<td style="min-width: 50%; max-width: 50%">
									#set ($exportMode = $false)
									#parse("/templates/export2_viewObject.vm")
								</td>
							</tr>
						</table>
					</div>
					#foreach ($item in $action.getErrorMessage())
						$!{item}
					#end
				</div>
			</form>
		</div>
		<script type="text/javascript">
			// Scroll into view
			if ($('a[scrollIntoView]').length > 0) {
				$('a[scrollIntoView]')[0].scrollIntoView();
			}			
			// Check if download is pending
			#if ($action.getDownloadAction())
				var downloadForm = $('form#downloadForm');
				downloadForm.attr('action', AJS.contextPath() + '${action.getDownloadAction()}');
				#foreach ($item in $action.getDownloadParameters().entrySet())
					var input = $("<input>")
               						.attr("type", "hidden")
              						.attr("name", "${item.getKey()}").val("${item.getValue()}");
					downloadForm.append(input);
				#end
				window.onbeforeunload = null;
				downloadForm.submit();
			#end
		</script>
	</body>
</html>