<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<!-- Add reference to resolve plugin packaging type -->
	<pluginRepositories>
		<pluginRepository>
			<id>atlassian-public</id>
			<url>https://m2proxy.atlassian.com/repository/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.igsl</groupId>
	<artifactId>ConfigMigration</artifactId>
	<version>2.3.0</version>

	<profiles>
		<profile>
			<id>Eclipse</id>
			<build>
				<directory>target_eclipse</directory>
			</build>
		</profile>
		<profile>
			<id>Default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
	</profiles>
	
	<organization>
		<name>Integrated Global Solutions Limited</name>
		<url>https://www.igsl-group.com/</url>
	</organization>

	<name>IGSL Config Migration</name>
	<description>Migrates configuration and data</description>
	<packaging>atlassian-plugin</packaging>

	<dependencies>

		<!-- JXPath library -->
		<dependency>
			<groupId>commons-jxpath</groupId>
			<artifactId>commons-jxpath</artifactId>
			<version>1.3</version>
		</dependency>

		<!-- Required for JAXB generated classes. There are package rename between versions, 3.0.0 fits JAXB used. -->
		<dependency>
			<groupId>jakarta.xml.bind</groupId>
			<artifactId>jakarta.xml.bind-api</artifactId>
			<version>3.0.0</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-impl</artifactId>
			<version>3.0.0</version>
			<scope>compile</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.4</version>
			<scope>provided</scope>
		</dependency>

		<!-- Active Objects -->
		<dependency>
			<groupId>com.atlassian.activeobjects</groupId>
			<artifactId>activeobjects-plugin</artifactId>
			<version>5.2.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.google.collections</groupId>
			<artifactId>google-collections</artifactId>
			<version>1.0</version>
			<scope>provided</scope>
		</dependency>

		<!-- Insight -->
		<dependency>
			<groupId>com.riadalabs.jira.plugins</groupId>
			<artifactId>insight</artifactId>
			<version>9.0.7</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.riadalabs</groupId>
			<artifactId>insight-core-model</artifactId>
			<version>0.3.9</version>
			<scope>provided</scope>
		</dependency>

		<!-- Jackson XML/JSON parser.  Due to XML parser dependencies, cannot use newer than 2.9.7 if Insight is also used. -->
		<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>2.9.7</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.9.7</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-xml</artifactId>
			<version>2.9.7</version>
		</dependency>

		<dependency>
			<groupId>com.atlassian.jira</groupId>
			<artifactId>jira-core</artifactId>
			<version>${jira.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>com.atlassian.jira</groupId>
			<artifactId>jira-api</artifactId>
			<version>${jira.version}</version>
			<scope>provided</scope>
		</dependency>
		<!-- Add dependency on jira-core if you want access to JIRA implementation classes as well as the sanctioned API. -->
		<!-- This is not normally recommended, but may be required eg when migrating a plugin originally developed against JIRA 4.x -->
		<!--
        <dependency>
            <groupId>com.atlassian.jira</groupId>
            <artifactId>jira-core</artifactId>
            <version>${jira.version}</version>
            <scope>provided</scope>
        </dependency>
        -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.10</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.atlassian.plugin</groupId>
			<artifactId>atlassian-spring-scanner-annotation</artifactId>
			<version>${atlassian.spring.scanner.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
			<scope>provided</scope>
		</dependency>

		<!-- WIRED TEST RUNNER DEPENDENCIES -->
		<dependency>
			<groupId>com.atlassian.plugins</groupId>
			<artifactId>atlassian-plugins-osgi-testrunner</artifactId>
			<version>${plugin.testrunner.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>jsr311-api</artifactId>
			<version>1.1.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<!--<version>2.2.2-atlassian-1</version>-->
			<version>2.3.1</version>
		</dependency>

		<!-- Uncomment to use TestKit in your project. Details at https://bitbucket.org/atlassian/jira-testkit -->
		<!-- You can read more about TestKit at https://developer.atlassian.com/display/JIRADEV/Plugin+Tutorial+-+Smarter+integration+testing+with+TestKit -->
		<!--
        <dependency>
            <groupId>com.atlassian.jira.tests</groupId>
            <artifactId>jira-testkit-client</artifactId>
            <version>${testkit.version}</version>
            <scope>test</scope>
        </dependency>
        -->
	</dependencies>

	<build>
		<plugins>
		
			<!-- To programmatically add generated sources to sources path -->
			<plugin>
			    <groupId>org.codehaus.mojo</groupId>
			    <artifactId>build-helper-maven-plugin</artifactId>
			    <version>1.8</version>
			    <executions>
			        <execution>
			            <id>add-source</id>
			            <phase>generate-sources</phase>
			            <goals>
			                <goal>add-source</goal>
			            </goals>
			            <configuration>
			                <sources>
			                    <source>${project.build.directory}/generated-sources/jaxb</source>
			                </sources>
			            </configuration>
			        </execution>
			    </executions>
			</plugin>
	        
			<!-- JAXB2 plugin to generate XML POJOs -->
			<plugin>
				<!-- There are multiple JAXB plugins... but only this one supports the use of extensions -->
				<groupId>org.jvnet.jaxb2.maven2</groupId>
       			<artifactId>maven-jaxb2-plugin</artifactId>
			    <version>0.15.3</version>
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<extension>true</extension>
					<args>
						<arg>-Xinheritance</arg>
					</args>
					<packageName>com.igsl.configmigration.workflow.mapper.generated</packageName>
					<schemas>
						<schema>
							<fileset>
								<directory>${project.basedir}/src/main/resources/schema</directory>
								<includes>
									<include>workflow_2_8.xsd</include>
								</includes>
							</fileset>
						</schema>
					</schemas>
					<bindings>
						<binding>
							<fileset>
								<directory>${project.basedir}/src/main/resources/schema</directory>
								<includes>
									<include>xsd_bindings.xjb</include>
								</includes>
							</fileset>
						</binding>
					</bindings>
					<generateDirectory>${project.build.directory}/generated-sources/jaxb</generateDirectory>
					<plugins>
						<plugin>
							<groupId>org.jvnet.jaxb2_commons</groupId>
							<artifactId>jaxb2-basics</artifactId>
							<version>0.6.4</version>
						</plugin>
					</plugins>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.atlassian.maven.plugins</groupId>
				<artifactId>jira-maven-plugin</artifactId>
				<version>${amps.version}</version>
				<extensions>true</extensions>
				<configuration>

					<!-- To write console output to log file -->
					<output>${project.build.directory}/logs/atlassian-confluence.log</output>

					<productVersion>${jira.version}</productVersion>
					<productDataVersion>${jira.version}</productDataVersion>
					<!-- Uncomment to install TestKit backdoor in JIRA. -->
					<!--
                    <pluginArtifacts>
                        <pluginArtifact>
                            <groupId>com.atlassian.jira.tests</groupId>
                            <artifactId>jira-testkit-plugin</artifactId>
                            <version>${testkit.version}</version>
                        </pluginArtifact>
                    </pluginArtifacts>
                    -->
					<enableQuickReload>true</enableQuickReload>

					<compressResources>false</compressResources>
					<compressJs>false</compressJs>
					<compressCss>false</compressCss>

					<log4jProperties>${project.basedir}/src/main/resources/WEB-INF/classes/log4j.properties</log4jProperties>

					<!-- See here for an explanation of default instructions: -->
					<!-- https://developer.atlassian.com/docs/advanced-topics/configuration-of-instructions-in-atlassian-plugins -->
					<instructions>
						<Atlassian-Plugin-Key>${atlassian.plugin.key}</Atlassian-Plugin-Key>

						<!-- Add package to export here -->
						<Export-Package>
                            *
                        </Export-Package>

						<!-- Add package import here -->
						<Import-Package>
                            org.springframework.osgi.*;resolution:="optional",
                            org.eclipse.gemini.blueprint.*;resolution:="optional",
                            *;resolution:="optional"
                        </Import-Package>

						<!-- Ensure plugin is spring powered -->
						<Spring-Context>*</Spring-Context>
					</instructions>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.atlassian.plugin</groupId>
				<artifactId>atlassian-spring-scanner-maven-plugin</artifactId>
				<version>${atlassian.spring.scanner.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>atlassian-spring-scanner</goal>
						</goals>
						<phase>process-classes</phase>
					</execution>
				</executions>
				<configuration>
					<verbose>false</verbose>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<properties>
		<jira.version>8.21.0</jira.version>
		<amps.version>8.1.2</amps.version>
		<plugin.testrunner.version>2.0.2</plugin.testrunner.version>
		<atlassian.spring.scanner.version>2.1.7</atlassian.spring.scanner.version>
		<!-- This property ensures consistency between the key in atlassian-plugin.xml and the OSGi bundle's key. -->
		<atlassian.plugin.key>${project.groupId}.${project.artifactId}</atlassian.plugin.key>
		<!-- TestKit version 6.x for JIRA 6.x -->
		<testkit.version>6.3.11</testkit.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
	</properties>

</project>