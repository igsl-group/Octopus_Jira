<html>
	<head>
		<title>Custom Approval User Delegation</title>
		<style type="text/css">
			table.CustomApprovalDelegate {
				width: 100%;
				table-layout: fixed;
			}
			
			table.CustomApprovalDelegate td,th {
				text-align: center;
			}
			
			.ui-datepicker {
			    background: white;
			}
			
			input.DatePicker {
				width: 40%;
			}
			
			select.TimePicker {
				width: 20%;
			}
		</style>
	</head>
	<body>
		<div style="padding: 5px">
			#if ($action.isAdmin()) 
			<form action="CustomApprovalUserDelegation.jspa?admin=1" method="post" id="main">
			#else
			<form action="CustomApprovalUserDelegation.jspa" method="post" id="main">
			#end
				<h3>Current Delegations</h3>
				<table class="CustomApprovalDelegate aui aui-table-sortable">
					<thead>
						<th width="10%"></th>
						#if ($action.isAdmin()) 
							<th width="15%">Delegate from User</th>
						#end
						<th width="15%">Delegate to User</th>
						<th width="15%">Start Date (inclusive)</th>
						<th width="15%">End Date (exclusive)</th>
						<th width="15%">Modified By</th>
						<th width="15%">Modified Date</th>
					</thead>
					<tbody>
						<input type="hidden" name="id" id="id" value=""/>
						<input type="hidden" name="delUser" id="delUser" value=""/>
						#if ($action.getSettings().size() == 0)
							<tr>
								<td colspan="100%">No delegation configured</td>
							</tr>
						#else
							#foreach ($item in $action.getSettings())
								<tr>
									<td>
										<button name="delete" type="submit" onclick="$('#id').val('${item.getId()}'); $('#delUser').val('${item.getFromUser()}')">
											<span class="aui-icon aui-icon-small aui-iconfont-close-dialog"></span>
										</button>
									</td>
									#if ($action.isAdmin()) 
										<td>${item.getFromUserObject().getDisplayName()}</td>
									#end
									<td>${item.getDelegateToUserObject().getDisplayName()}</td>
									<td>${item.getStartDateString()}</td>
									<td>${item.getEndDateString()}</td>
									<td>${item.getLastModifiedByObject().getDisplayName()}</td>
									<td>${item.getLastModifiedDateString()}</td>
								</tr>
							#end
						#end
					</tbody>
				</table>
				<h3>Add Delegation</h3>
				<table style="width: 70%">
					<thead>
						<tr>
							#if ($action.isAdmin()) 
								<th width="25%">Delegate from User</th>
							#end
							<th width="25%">Delegate to User</th>
							<th width="25%">Start Date</th>
							<th width="25%">End Date</th>
						</tr>
					</thead>
					<tbody>
						<tr>
							#if ($action.isAdmin()) 
								<td>
									<input 	type="text"
											class="ajs-dirty-warning-exempt"
											id="fromUserKey"
											name="fromUserKey" 
											value=""
											onchange="validateForm()"/>
								</td>
							#end
							<td>
								<input 	type="text" 
										class="ajs-dirty-warning-exempt"
										id="userKey"
										name="userKey" 
										value=""
										onchange="validateForm()"/>
							</td>
							<td>
								<input 	type="text" 
										class="DatePicker ajs-dirty-warning-exempt" 
										id="startDate" 
										name="startDate" 
										value=""
										autocomplete="off"
										onchange="validateForm()"/>
								<select class="TimePicker ajs-dirty-warning-exempt" id="startHour" name="startHour"
										onchange="validateForm()">
									<option value=""></option>
									#foreach ($idx in [0..23])
										#if ($idx lt 10)
											<option value="0${idx}">0${idx}</option>
										#else
											<option value="${idx}">${idx}</option>
										#end
									#end
								</select>
								<span>:</span>
								<select class="TimePicker ajs-dirty-warning-exempt" id="startMinute" name="startMinute"
										onchange="validateForm()">
									<option value=""></option>
									#foreach ($idx in [0..59])
										#if ($idx lt 10)
											<option value="0${idx}">0${idx}</option>
										#else
											<option value="${idx}">${idx}</option>
										#end
									#end
								</select>
							</td>
							<td>
								<input 	type="text" 
										class="DatePicker ajs-dirty-warning-exempt" 
										id="endDate" 
										name="endDate" 
										value=""
										autocomplete="off"
										onchange="validateForm()"/>
								<select class="TimePicker ajs-dirty-warning-exempt" id="endHour" name="endHour"
										onchange="validateForm()">
									<option value=""></option>
									#foreach ($idx in [0..23])
										#if ($idx lt 10)
											<option value="0${idx}">0${idx}</option>
										#else
											<option value="${idx}">${idx}</option>
										#end
									#end
								</select>
								<span>:</span>
								<select class="TimePicker ajs-dirty-warning-exempt" id="endMinute" name="endMinute"
										onchange="validateForm()">
									<option value=""></option>
									#foreach ($idx in [0..59])
										#if ($idx lt 10)
											<option value="0${idx}">0${idx}</option>
										#else
											<option value="${idx}">${idx}</option>
										#end
									#end
								</select>
							</td>
						</tr>
						<tr>
							#if ($action.isAdmin()) 
								<td>
									<div 	id="fromUserError" 
											style="display: none; width; 95%">
										Please select a user
									</div>
								</td>
							#end
							<td>
								<div 	id="userError" 
										style="display: none; width; 95%">
									Please select a user
								</div>
							</td>
							<td>
								<div	id="startDateError"
										style="display: none; width: 95%">
									Invalid date format
								</div>
								<div	id="dateRangeError"
										style="display: none; width: 95%">
									Start date/time should be less than end date/time
								</div>
							</td>
							<td>
								<div	id="endDateError"
										style="display: none; width: 95%">
									Invalid date format
								</div>
							</td>
						</tr>
						<tr>
							<td colspan="100%"><input id="add" name="add" type="submit" value="Add" disabled /></td>
						</tr>
					</tbody>
				</table>
			</form>
		</div>
		<!-- To push the Atlassian bottom banner away -->
		<br/>
		<br/>
		<script type="text/javascript">
			function formatDate(d) {
				if (d) {
					var year = d.getFullYear();
					var month = (d.getMonth() + 1);
					if (month < 10) {
						month = '0' + month;
					}
					var day = d.getDate();
					if (day < 10) {
						day = '0' + day;
					}
					
					return year + '-' + month + '-' + day;
				}
				return '';
			}
		
			function validateForm() {
				var error = false;
				var user = $('#userKey').val();
				var start = $('#startDate').val();
				var end = $('#endDate').val();
				var startHour = $('#startHour').val();
				var startMin = $('#startMinute').val();
				var endHour = $('#endHour').val();
				var endMin = $('#endMinute').val();
				// fromUser
				#if ($action.isAdmin())
					var fromUser = $('#fromUserKey').val();
					if (!fromUser) {
						error = true;
						$('#fromUserError').show();
					} else {
						$('#fromUserError').hide();
						if (user == fromUser) {
							user = null;
							$('#userKey').val('');
							$('#userKey').select2('val', '');
						}
					}
				#end
				// User
				if (!user) {
					error = true;
					$('#userError').show();
				} else {
					$('#userError').hide();
				}
				// Start date				
				start = parseDate(start, true);
				if (start || start === '') {
					$('#startDateError').hide();
					$('#startDateError').hide();
				} else {
					// Invalid format
					$('#startDateError').show();
					error = true;
				}
				// End date
				end = parseDate(end);
				if (end || end === '') {
					$('#endDateError').hide();
				} else {
					// Invalid format
					$('#endDateError').show();
					error = true;
				}
				// Set start date to today if empty
				if (!start) {
					start = formatDate(new Date());
					$('#startDate').val(start);
				}
				// Initial startHour and startMin
				if (start) {
					if (!startHour) {
						$('#startHour').val('00');
					}
					if (!startMin) {
						$('#startMinute').val('00');
					}
				} else {
					$('#startHour').val('');
					$('#startMinute').val('');
				}
				// Initial endHour and endMin
				if (end) {
					if (!endHour) {
						$('#endHour').val('23');
					}
					if (!endMin) {
						$('#endMinute').val('59');
					}
				} else {
					$('#endHour').val('');
					$('#endMinute').val('');
				}
				// Update min date on endDate
				var minDate = new Date(start);
				minDate.setDate(minDate.getDate());
				$('#endDate').datepicker('option', 'minDate', minDate);	// This resets the value
				// Restore endDate value
				if (end) {
					var endVal = new Date(end);
					if (endVal < minDate) {
						$('#endDate').val(formatDate(minDate));
					} else {
						$('#endDate').val(formatDate(endVal));
					}
				} else {
					$('#endDate').val('');					
				}
				// Compare end date/time with start date/time
				$('#dateRangeError').hide();
				if (start == end) {
					var startTime = $('#startHour').val() + $('#startMinute').val();
					var endTime = $('#endHour').val() + $('#endMinute').val();
					if (startTime >= endTime) {
						error = true;
						$('#dateRangeError').show();
					} 
				} 
				// Update add button
				$('#add').prop('disabled', error);
			}
			
			function parseDate(s) {
				console.log('parseDate: [' + s + ']');
				if (s === '') {
					console.log('isEmpty');
					return '';
				} 
				const regExp = new RegExp('[0-9]{4}-[0-9]{2}-[0-9]{2}');
				if (s.match(regExp)) {
					console.log('regex matched');
					var d = new Date(s);
					if (!isNaN(d)) {
						console.log('is valid date');
						return formatDate(d);
					} else {
						console.log('is invalid date');
					}
				}
				console.log('regex not match');
				return null;
			}
			
			function filterUser(data, exceptFromUser) {
				var m = new Map();
				if (data && data.users && data.users.length) {
					var src = data.users;
					for (var i = 0; i < src.length; i++) {
						console.log('exceptFromUser: ' + exceptFromUser);
						if (exceptFromUser) {
							var exceptKey = $('#fromUserKey').val();
							console.log('exceptKey: ' + exceptKey);
							if (src[i].key != exceptKey) {
								m.set(src[i].key, {
									id: src[i].key,
									text: src[i].displayName
								});
							}
						} else {
							m.set(src[i].key, {
								id: src[i].key,
								text: src[i].displayName
							});
						}
					}
				}
				return {
					results: Array.from(m.values())
				};
			}
			
			// User picker for all users
			var fromUserPickerConfig = {
				delay: 250,
				placeholder: "Select User",
				width: '100%',
				ajax: {
					type: 'GET',
					url: AJS.contextPath() + '/rest/api/2/user/picker',
					dataType: 'json',
					params: {
						contentType:'application/json'
					},
					data: function(term) {
						return { 
							query: (term? term : ""),
							maxResults: 1000
						};
					},
					results: function(data, params) {
						return filterUser(data, false);
					}
				}
			};
			$('#fromUserKey').select2(fromUserPickerConfig);
			
			// User picker for all users fromUser
			var userPickerConfig = {
				delay: 250,
				placeholder: "Select User",
				width: '100%',
				ajax: {
					type: 'GET',
					url: AJS.contextPath() + '/rest/api/2/user/picker',
					dataType: 'json',
					params: {
						contentType:'application/json'
					},
					data: function(term) {
						return { 
							query: (term? term : ""),
							maxResults: 1000
						};
					},
					results: function(data, params) {
						return filterUser(data, true);
					}
				}
			};
			$('#userKey').select2(userPickerConfig);
			
			// Date pickers
			var startDate = {
				width: '50%',
				changeMonth: true,
				changeYear: true,
				showWeek: false,
				firstDay: 1,
				showAnim: 'show',
				dateFormat: 'yy-mm-dd',
				minDate: new Date(),
				onSelect: function(d) {
					validateForm();
				}
			};
			var endDate = {
				width: '50%',
				changeMonth: true,
				changeYear: true,
				showWeek: false,
				firstDay: 1,
				showAnim: 'show',
				dateFormat: 'yy-mm-dd',
				minDate: new Date(new Date().getTime() + 1000 * 60 * 60 * 24),	// Tomorrow
				onSelect: function(d) {
					validateForm();
				}
			};
			$('#startDate').datepicker(startDate);
			$('#endDate').datepicker(endDate);
			
			// Workaround for weird behavior of datepicker. 
			// If I don't display it once first, when changing option later, 
			// it will be displayed at the bottom of the page.
			$('#endDate').datepicker('show');			
			$('#endDate').datepicker('hide');			
		</script>
	</body>
</html>