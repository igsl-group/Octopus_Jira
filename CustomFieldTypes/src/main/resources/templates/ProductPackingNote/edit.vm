## i18n 
#set ($nameLabel = $i18n.getText("ProductPackingNote.name.label"))
#set ($nameHelpText = $i18n.getText("ProductPackingNote.name.helpText"))
#set ($versionLabel = $i18n.getText("ProductPackingNote.version.label"))
#set ($versionHelpText = $i18n.getText("ProductPackingNote.version.helpText"))
#set ($md5SignatureLabel = $i18n.getText("ProductPackingNote.md5Signature.label"))
#set ($md5SignatureHelpText = $i18n.getText("ProductPackingNote.md5Signature.helpText"))
#set ($deleteButton = $i18n.getText("ProductPackingNote.deleteButton"))
#set ($addButton = $i18n.getText("ProductPackingNote.addButton"))

## Get value, or default if no issue
#if ($issue) 
	#set ($obj = $customField.getValue($issue))
#else
	#set ($obj = $configs.default)
#end

## Index for no. of data
#set ($idx = 0)

#set ($mode = 'Edit')
#set ($panel = ${customField.id} + ${mode})
#set ($state = ${issue.key} + '.' + ${customField.id} + '.State')
#set ($toggle = ${panel} + '_Toggle')
#set ($useSessionState = $false)

#controlHeader ($action $customField.id $customField.name $fieldLayoutItem.required $displayParameters.noHeader)
<div class="table-header">
	<a href="#" onclick="${toggle}()">
		<span id="${panel}_Collapsed" style="display: none">&#11166;</span>
		<span id="${panel}_Expanded">&#11167;</span>
		${customField.name}
	</a>
</div>
<div id="${panel}">
	<table class="edit-table">
		<thead>
			<th width="1%"></th>
			<th>${nameLabel}</th>
			<th>${versionLabel}</th>
			<th>${md5SignatureLabel}</th>
		</thead>
		<tbody id="${customField.id}_ProductPackingNoteEdit_Body">
			#if ($obj)
				#if ($obj.size() > 0)
					#foreach ($item in $obj)
						<tr id="${customField.id}_fieldSet_${velocityCount}">
							<td>
								<button type="button" onclick="${customField.id}_removeNote('#${customField.id}_fieldSet_${velocityCount}')">
									<span class="aui-icon aui-icon-small aui-iconfont-close-dialog"></span> ${deleteButton}
								</button>
							</td>	
							<td>
								<input 	type="text" 
										placeholder="${nameHelpText}" 
										name="${customField.id}:name" 
										id="${customField.id}:name:${velocityCount}" 
										value="$!item.name" />
							</td>
							<td>
								<input 	type="text" 
										placeholder="${versionHelpText}" 
										name="${customField.id}:version" 
										id="${customField.id}:version:${velocityCount}" 
										value="$!item.version" />
							</td>
							<td>
								<input 	type="text" 
										placeholder="${md5SignatureHelpText}" 
										name="${customField.id}:md5Signature" 
										id="${customField.id}:md5Signature:${velocityCount}" 
										value="$!item.md5Signature" />
							</td>
						</tr>
						#set ($idx = $velocityCount)
					#end
				#end
			#end
		</tbody>
		<tfoot>
			<tr>
				<td colspan="100%">
					<button type="button" onclick="${customField.id}_addNote()">
						<span class="aui-icon aui-icon-small aui-iconfont-add"></span> ${addButton}
					</button>
				</td>
			</tr>
		</tfoot>
	</table>
</div>
<script type="text/javascript">
	var ${customField.id}_idx = ${idx};
	function ${customField.id}_removeNote(id) {
		$(id).remove();
	}
	function ${customField.id}_addNote() {
		${customField.id}_idx++;
		var newControlHTML =
			'<tr id="${customField.id}_fieldSet_' + ${customField.id}_idx + '">' + 
			'	<td>' + 
			'		<button type="button" onclick="${customField.id}_removeNote(\'#${customField.id}_fieldSet_' + ${customField.id}_idx + '\')">' + 
			'			<span class="aui-icon aui-icon-small aui-iconfont-close-dialog"></span> ${deleteButton}' + 
			'		</button>' + 
			'	</td>	' + 
			'	<td>' + 
			'		<input 	type="text" ' + 
			'				placeholder="${nameHelpText}" ' + 
			'				name="${customField.id}:name" ' + 
			'				id="${customField.id}:name:' + ${customField.id}_idx + '" ' + 
			'				value="$!item.name" />' + 
			'	</td>' + 
			'	<td>' + 
			'		<input 	type="text" ' + 
			'				placeholder="${versionHelpText}" ' + 
			'				name="${customField.id}:version" ' + 
			'				id="${customField.id}:version:' + ${customField.id}_idx + '" ' + 
			'				value="$!item.version" />' + 
			'	</td>' + 
			'	<td>' + 
			'		<input 	type="text" ' + 
			'				placeholder="${md5SignatureHelpText}" ' + 
			'				name="${customField.id}:md5Signature" ' + 
			'				id="${customField.id}:md5Signature:' + ${customField.id}_idx + '" ' + 
			'				value="$!item.md5Signature" />' + 
			'	</td>' + 
			'</tr>';
		$('#${customField.id}_ProductPackingNoteEdit_Body').append(newControlHTML);
	}
	
	// Listen to event, we need to initialize select2 on newly added edit controls
	JIRA.bind(JIRA.Events.NEW_CONTENT_ADDED, function(e, context, reason) {
		// Add first item if empty
		if ($('tr[id^="${customField.id}_fieldSet_"]').length == 0) {
			${customField.id}_addNote();
		}
	});	


	function ${toggle}_Helper(state) {
		var panel = '#${panel}';
		var expanded = panel + '_Expanded';
		var collapsed = panel + '_Collapsed';
		if (state === null) {
			if (${useSessionState}) {
				// Get state from sessionStorage
				var s = sessionStorage.getItem('${state}');
				if (s) {
					state = (JSON.parse(s) === true);
				} else {
					state = true;
				}
			} else {
				// Not using session state and state not provided, do nothing
				return;
			}
		} 
		if (state) {
			$(panel).show();
			$(expanded).show();
			$(collapsed).hide();
		} else {
			$(panel).hide();
			$(expanded).hide();
			$(collapsed).show();
		}
		if (${useSessionState}) {
			sessionStorage.setItem('${state}', JSON.stringify(state));
		}
	}
	function ${toggle}() {
		if ($(${panel}).is(":hidden")) {
			${toggle}_Helper(true);
		} else {
			${toggle}_Helper(false);
		}
	}
	// Apply state
	${toggle}_Helper(null);
</script>
#controlFooter ($action $customField.name $displayParameters.noHeader)